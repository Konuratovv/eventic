version: '3'

services:
  api:
    build: .
    command: >
      sh -c "gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - '8000:8000'
    restart: always
    depends_on:
      - postgres
      - migration
    volumes:
      - .:/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: eventic_db
      POSTGRES_USER: silver
      POSTGRES_PASSWORD: 1
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  migration:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate"
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres


  nginx:
    image: nginx:latest
    container_name: docker_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - etc-letsencrypt:/etc/letsencrypt
    depends_on:
      - api

#  certbot:
#    image: certbot/certbot
#    depends_on:
#      - nginx
#    container_name: certbot
#    volumes:
#      - etc-letsencrypt:/etc/letsencrypt
#      - www-html:/var/www/html
#    command: certonly --webroot --webroot-path=/var/www/html --email bekbolsuntk@gmail.com --agree-tos --no-eff-email -d eventic.pp.ua
#

#  redis:
#    image: redis
#    ports:
#      - "6379:6379"
#
#  celery:
#    build: .
#    command: celery -A hotelApi worker -l INFO
#
#    volumes:
#      - .:/usr/src/app/
#    depends_on:
#      - web
#      - redis


volumes:
  postgres_data:
  static_volume:
  media_volume:
  etc-letsencrypt:
  www-html: