version: '3'

services:
  api:
    build: .
    command: >
      sh -c "daphne -b 0.0.0.0 -p 8000 config.asgi:application"
    container_name: eventic
    ports:
      - '8001:8000'
    restart: always
    depends_on:
      - postgres
      - migration
    volumes:
      - static_volume:/usr/src/app/back_static
      - media_volume:/usr/src/app/back_media
#    environment:
#      - DJANGO_SETTINGS_MODULE=config.settings.base
#    environment:
#      - VIRTUAL_HOST=eventic.pp.ua
#      - LETSENCRYPT_HOST=eventic.pp.ua
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: eventic_db
      POSTGRES_USER: silver
      POSTGRES_PASSWORD: 1
      TZ: Asia/Bishkek
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  migration:
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate"
    depends_on:
      - postgres


  nginx:
    image: nginx:latest
    ports:
      - "81:81"
#      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/src/app/back_static
      - media_volume:/usr/src/app/back_media
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - html:/usr/share/nginx/html
#      - vhost:/etc/nginx/vhost.d
#      - certs:/etc/nginx/certs
    depends_on:
      - api

#  acme_companion:
#    image: nginxproxy/acme-companion:2.2
#    container_name: acme_companion
#    volumes_from:
#      - nginx
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - acme:/etc/acme.sh



  redis:
    image: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass myPass

  celery:
    build: .
    command: celery -A config worker -l INFO

    depends_on:
      - api
      - redis

  celery-beat:
    build: .
    command: celery -A config beat -l INFO
    depends_on:
      - redis
      - api
      - celery


volumes:
  postgres_data:
  static_volume:
  media_volume:
#  certs:
#  acme:
#  vhost:
#  html: